const axios = require("axios");
const fs = require("fs-extra");

module.exports.config = {
  name: "stalk",
  version: "1.0.0",
  permission: 0,
  credits: "Joy Ahmed",
  description: "Facebook ‡¶∏‡ßç‡¶ü‡¶ï‡ßá‡¶∞ ‡¶Æ‡¶§ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ì ‡¶õ‡¶¨‡¶ø ‡¶∏‡¶π",
  prefix: true,
  category: "utility",
  usages: "[uid / username / profile link]",
  cooldowns: 5
};

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID } = event;
  const input = args.join(" ");

  if (!input) return api.sendMessage("‚ùå Facebook username / UID / link ‡¶¶‡¶ø‡¶®!", threadID, messageID);

  try {
    // ‡¶∏‡ßç‡¶ü‡¶ï ‡¶á‡¶®‡¶´‡ßã ‡¶Ü‡¶®‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
    const res = await axios.get(`https://aemt.me/fbstalk?uid=${encodeURIComponent(input)}`);
    const data = res.data;

    if (!data || data.error) {
      return api.sendMessage("‚ùå ‡¶á‡¶®‡¶´‡ßã ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ ‡¶∏‡¶†‡¶ø‡¶ï UID ‡¶¨‡¶æ username ‡¶¶‡¶ø‡¶®‡•§", threadID, messageID);
    }

    const msg =
`üîç ùóôùóîùóñùóòùóïùó¢ùó¢ùóû ùó¶ùóßùóîùóüùóû ùó•ùóòùó£ùó¢ùó•ùóß üîç
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

üìÅ ùóïùóîùó¶ùóúùóñ ùóúùó°ùóôùó¢
‚ï∞üë§ Name: ${data.name || "No data"}
‚ï∞‚ö° Fast Name: ${data.first_name || "No data"}
‚ï∞üÜî UID: ${data.uid || "No data"}
‚ï∞üîó Username: ${data.username || "No data"}
‚ï∞üåê Profile Link: ${data.link || "No data"}
‚ï∞üìÖ Created: ${data.created || "No data"}
‚ï∞‚òëÔ∏è Verified: ${data.tick === true ? "‚úÖ Verified" : "‚ùå Not Verified"}

üë§ ùó£ùóòùó•ùó¶ùó¢ùó°ùóîùóü ùóúùó°ùóôùó¢
‚ï∞üéÇ Birthday: ${data.birthday || "No data"}
‚ï∞üóìÔ∏è In Words: ${data.birthday_word || "No data"}
‚ï∞üöª Gender: ${data.gender || "No data"}
‚ï∞üíò Relationship: ${data.relationship || "No data"}
‚ï∞üìõ Nickname: ${data.nick || "None"}
‚ï∞üíû Love Status: ${data.love || "No data"}
‚ï∞üß† About: ${data.about || "No data"}
‚ï∞üí¨ Quotes: ${data.quotes || "No data"}

üåç ùóüùó¢ùóñùóîùóßùóúùó¢ùó° & ùó™ùóòùóï
‚ï∞üè† Hometown: ${data.hometown || "No data"}
‚ï∞üìå Locale: ${data.locale || "No data"}
‚ï∞üåê Website: ${data.website || "No data"}

üìä ùó¶ùó¢ùóñùóúùóîùóü ùóîùóñùóßùóúùó©ùóúùóßùó¨
‚ï∞üë• Followers: ${data.follow || "No data"}
‚ï∞üè¢ Works At:
${data.work || "No Data"}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ùêÇùê´ùêûùêöùê≠ùê®ùê´: ùêåùê¢ùê¨ùê¨ ùêåùê¢ùê¶`;

    // ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï
    const profilePic = (await axios.get(data.profile_url, { responseType: "stream" })).data;
    const coverPic = (await axios.get(data.cover_url, { responseType: "stream" })).data;

    const pfpPath = __dirname + "/cache/profile.jpg";
    const coverPath = __dirname + "/cache/cover.jpg";

    profilePic.pipe(fs.createWriteStream(pfpPath));
    coverPic.pipe(fs.createWriteStream(coverPath));

    profilePic.on("end", () => {
      coverPic.on("end", () => {
        api.sendMessage({
          body: msg,
          attachment: [
            fs.createReadStream(pfpPath),
            fs.createReadStream(coverPath)
          ]
        }, threadID, () => {
          fs.unlinkSync(pfpPath);
          fs.unlinkSync(coverPath);
        }, messageID);
      });
    });

  } catch (err) {
    console.log(err);
    return api.sendMessage("‚ùå ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§", threadID, messageID);
  }
};
